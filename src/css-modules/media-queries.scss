@use "sass:string";
@import 'variables.scss';

/* Media Queries */ 
// Not necessarily correct, edit these at will 
$media_queries : (
    // 'mobile'    : "only screen and (max-width: 667px)",
    'tablet'    : string.unquote("only screen and (max-width: #{$ipad-pro-landscape})"),
    'tablet-landscape'  : string.unquote("only screen and (max-width: #{$ipad-pro-landscape}) and (orientation:landscape)"),
    'big-monitor-landscape'  : string.unquote("only screen and (max-width: #{$big-monitor-landscape}) and (orientation:landscape)"),
    'phone-landscape'   : string.unquote("only screen and (max-width: #{$phone-landscape}) and (orientation:landscape)"),
    'phone-portrait'   : string.unquote("only screen and (max-width: #{$phone-portrait}) and (orientation:portrait)"),
    'large-tablet-portrait'   : string.unquote("only screen and (min-width: #{$big-tablet-portrait}) and (orientation:portrait)"),
    // 'desktop'   : "only screen and (min-width: ($size__site_content_width + 1))",
    // 'retina2'   : "only screen and (-webkit-min-device-pixel-ratio: 2) and (min-resolution: 192dpi)",
    // 'retina3'   : "only screen and (-webkit-min-device-pixel-ratio: 3) and (min-resolution: 288dpi)",
    'landscape' : string.unquote("screen and (orientation:landscape)"),    
    'portrait'  : string.unquote("screen and (orientation:portrait)")
);

@mixin for_breakpoint($breakpoints) {
    $conditions : ();
    @each $breakpoint in $breakpoints {
        // If the key exists in the map
        $conditions: append(
            $conditions,
            #{inspect(map-get($media_queries, $breakpoint))},
            comma
        );
    }

    @media #{$conditions} {
        @content;
    }

}